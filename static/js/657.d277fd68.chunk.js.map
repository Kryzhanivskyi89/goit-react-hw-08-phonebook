{"version":3,"file":"static/js/657.d277fd68.chunk.js","mappings":"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","sources":["redux/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactElem/ContactElem.module.css?4810","components/ContactElem/ContactElem.jsx","pages/Contacts.jsx"],"sourcesContent":["\r\nexport const selectContacts = state => state.contacts.contactsList;\r\n\r\nexport const selectIsLoading = state => state.contacts.isLoading;\r\n\r\nexport const selectError = state => state.contacts.error;\r\n\r\nexport const selectFilter = state => state.filter;","// extracted by mini-css-extract-plugin\nexport default {\"contact__form\":\"ContactForm_contact__form__OjRMi\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Notiflix from 'notiflix';\r\n\r\nimport {addContact} from './../../redux/operations';\r\nimport {selectContacts } from '../../redux/selectors';\r\nimport style from './ContactForm.module.css';\r\n\r\nconst ContactForm = () => {    \r\n\r\n  const dispatch = useDispatch();\r\n  const [localState, setLocalState] = useState({ name: '', number: '' });\r\n\r\n  const handleChange = e => {\r\n        const { name, value } = e.target;\r\n        setLocalState(prevState => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  const { name, number } = localState;\r\n  const contacts = useSelector(selectContacts);\r\n\r\n  const checkContact = contacts.some(contact => {\r\n    return (\r\n      contact.name.toLowerCase() === localState.name.toLowerCase() ||\r\n      contact.number === localState.number\r\n    );\r\n  });\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    checkContact\r\n      ? (Notiflix.Notify.warning('This contact already exists'))\r\n      : dispatch(addContact(localState))\r\n    \r\n      && setLocalState(() => ({ name: '', number: '' }));\r\n      // e.target.reset();\r\n  };\r\n   \r\nreturn (\r\n  \r\n    <form className={style.contact__form} onSubmit={handleSubmit}>\r\n      <label className={style.label}> Name\r\n        <input className={style.input}                \r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          id=\"contactName\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label  className={style.label}>Number\r\n        <input className={style.input}                \r\n          type=\"tel\"\r\n          id=\"contactNumber\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <button className={style.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;","import { Dna } from 'react-loader-spinner';\r\n\r\n function Loader () {\r\n    return (\r\n            <Dna\r\n                height=\"80\"\r\n                width=\"80\"\r\n                color=\"#4fa94d\"\r\n                ariaLabel=\"loading\"\r\n                wrapperStyle={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    height: '100vh',\r\n                    margin: '0 auto',\r\n                    position: 'fixed',\r\n                    top: '0',\r\n                    left: '0',\r\n                    right: '0',\r\n                    bottom: '0',\r\n                    zIndex: '9999',\r\n                }}\r\n                wrapperClass=\"\"\r\n                visible={true}\r\n            />\r\n    );\r\n}\r\n\r\nexport default Loader","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"button\":\"ContactList_button__7kL4l\"};","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectContacts, selectError, selectFilter, selectIsLoading } from 'redux/selectors';\r\n\r\nimport { fetchContacts, deleteContact } from '../../redux/operations';\r\nimport  Loader  from './../Loader/Loader'\r\nimport style from './ContactList.module.css';\r\n\r\nconst ContactList = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchContacts());\r\n    }, [dispatch]);\r\n\r\n    const isLoading = useSelector(selectIsLoading);\r\n    const error = useSelector(selectError);\r\n    const contacts = useSelector(selectContacts);\r\n    const filter = useSelector(selectFilter);\r\n\r\n    const filteringContacts = contacts => {\r\n        return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\r\n    };\r\n    \r\n    return (\r\n        <ul className={style.list}>\r\n            {isLoading && !error && <Loader />}\r\n            {!isLoading && !error &&\r\n                filteringContacts(contacts).map(({ id, name, number }) => (\r\n                    <li className={style.item} key={id}>\r\n                        <p>\r\n                            {name}: {number}\r\n                        </p>\r\n                        <button className={style.button} type=\"button\" onClick={() => dispatch(deleteContact(id))} >Delete contact</button>\r\n                    </li>\r\n                ))\r\n            }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default ContactList","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"Filter_name__ZiNRr\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport style from './Filter.module.css';\r\nimport { setFilter } from '../../redux/contacts/filterSlice';\r\nimport { selectFilter } from '../../redux/selectors';\r\n\r\nconst Filter = () => {\r\n\r\n    const filter = useSelector(selectFilter);\r\n    const dispatch = useDispatch();\r\n    const filterInputing = e => {\r\n        dispatch(setFilter(e.target.value));\r\n    };\r\n  \r\n    return (\r\n        <label className={style.name}>\r\n            Find contacts by name\r\n            <input className={style.input} type='text' value={filter} onChange={filterInputing} />\r\n        </label>\r\n    )\r\n};\r\n\r\nexport default Filter","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"ContactElem_card__NvjGM\",\"title\":\"ContactElem_title__dRhrw\"};","import PropTypes from 'prop-types';\r\nimport styles from './ContactElem.module.css';\r\n\r\nconst ContactElem = ({title, children}) => {\r\n    return (\r\n        <>\r\n            <div className={styles.card}>\r\n                <h2 className={styles.title}>{title}</h2>\r\n                {children}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nContactElem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default ContactElem","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {  HelmetProvider } from 'react-helmet-async';\r\n\r\nimport { fetchContacts } from '../redux/operations';\r\nimport { selectIsLoading } from '../redux/selectors';\r\nimport ContactForm from '../components/ContactForm/ContactForm';\r\nimport ContactList from '../components/ContactList/ContactList';\r\nimport Filter from '../components/Filter/Filter';\r\nimport Loader from './../components/Loader/Loader';\r\nimport ContactElem from 'components/ContactElem/ContactElem';\r\n\r\n\r\nexport default function Contacts() {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(selectIsLoading);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  \r\n  return (    \r\n    <>\r\n      <HelmetProvider>\r\n        \r\n        <ContactElem title=\"Phonebook\">\r\n          <ContactForm />\r\n        </ContactElem>\r\n      \r\n        <ContactElem title=\"Contacts\">      \r\n          <Filter />  \r\n          <div>{isLoading && <Loader />}</div>\r\n          <ContactList />\r\n        </ContactElem>\r\n          \r\n      </HelmetProvider>\r\n    </>\r\n  );\r\n}"],"names":["selectContacts","state","contacts","contactsList","selectIsLoading","isLoading","selectError","error","selectFilter","filter","dispatch","useDispatch","useState","name","number","localState","setLocalState","handleChange","e","target","value","prevState","checkContact","useSelector","some","contact","toLowerCase","className","style","onSubmit","preventDefault","Notiflix","addContact","type","id","pattern","title","onChange","required","height","width","color","ariaLabel","wrapperStyle","display","justifyContent","alignItems","margin","position","top","left","right","bottom","zIndex","wrapperClass","visible","useEffect","fetchContacts","includes","filteringContacts","map","onClick","deleteContact","setFilter","children","styles","Contacts"],"sourceRoot":""}