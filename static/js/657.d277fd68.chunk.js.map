{"version":3,"file":"static/js/657.d277fd68.chunk.js","mappings":"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","sources":["redux/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactElem/ContactElem.module.css?4810","components/ContactElem/ContactElem.jsx","pages/Contacts.jsx"],"sourcesContent":["\nexport const selectContacts = state => state.contacts.contactsList;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;","// extracted by mini-css-extract-plugin\nexport default {\"contact__form\":\"ContactForm_contact__form__OjRMi\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\n\nimport {addContact} from './../../redux/operations';\nimport {selectContacts } from '../../redux/selectors';\nimport style from './ContactForm.module.css';\n\nconst ContactForm = () => {    \n\n  const dispatch = useDispatch();\n  const [localState, setLocalState] = useState({ name: '', number: '' });\n\n  const handleChange = e => {\n        const { name, value } = e.target;\n        setLocalState(prevState => ({ ...prevState, [name]: value }));\n  };\n\n  const { name, number } = localState;\n  const contacts = useSelector(selectContacts);\n\n  const checkContact = contacts.some(contact => {\n    return (\n      contact.name.toLowerCase() === localState.name.toLowerCase() ||\n      contact.number === localState.number\n    );\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    checkContact\n      ? (Notiflix.Notify.warning('This contact already exists'))\n      : dispatch(addContact(localState))\n    \n      && setLocalState(() => ({ name: '', number: '' }));\n      // e.target.reset();\n  };\n   \nreturn (\n  \n\n    <form className={style.contact__form} onSubmit={handleSubmit}>\n        <label className={style.label}> Name\n            <input className={style.input}                \n                type=\"text\"\n                name=\"name\"\n                value={name}\n                id=\"contactName\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                onChange={handleChange}\n                required\n            />\n        </label>\n        <label  className={style.label}>Number\n            <input className={style.input}                \n                type=\"tel\"\n                id=\"contactNumber\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                value={number}\n                onChange={handleChange}\n                required\n            />\n        </label>\n        <button className={style.button} type=\"submit\">\n            Add contact\n        </button>\n    </form>\n  );\n};\n\nexport default ContactForm;","import { Dna } from 'react-loader-spinner';\n\n function Loader () {\n    return (\n            <Dna\n                height=\"80\"\n                width=\"80\"\n                color=\"#4fa94d\"\n                ariaLabel=\"loading\"\n                wrapperStyle={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '100vh',\n                    margin: '0 auto',\n                    position: 'fixed',\n                    top: '0',\n                    left: '0',\n                    right: '0',\n                    bottom: '0',\n                    zIndex: '9999',\n                }}\n                wrapperClass=\"\"\n                visible={true}\n            />\n    );\n}\n\nexport default Loader","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"button\":\"ContactList_button__7kL4l\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectError, selectFilter, selectIsLoading } from 'redux/selectors';\n\nimport { fetchContacts, deleteContact } from '../../redux/operations';\nimport  Loader  from './../Loader/Loader'\nimport style from './ContactList.module.css';\n\nconst ContactList = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n    const contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n\n    const filteringContacts = contacts => {\n        return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n    };\n    \n    return (\n        <ul className={style.list}>\n            {isLoading && !error && <Loader />}\n            {!isLoading && !error &&\n                filteringContacts(contacts).map(({ id, name, number }) => (\n                    <li className={style.item} key={id}>\n                        <p>\n                            {name}: {number}\n                        </p>\n                        <button className={style.button} type=\"button\" onClick={() => dispatch(deleteContact(id))} >Delete contact</button>\n                    </li>\n                ))\n            }\n        </ul>\n    );\n};\n\nexport default ContactList","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"Filter_name__ZiNRr\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch, useSelector } from 'react-redux';\n\nimport style from './Filter.module.css';\nimport { setFilter } from '../../redux/contacts/filterSlice';\nimport { selectFilter } from '../../redux/selectors';\n\nconst Filter = () => {\n\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n    const filterInputing = e => {\n        dispatch(setFilter(e.target.value));\n    };\n  \n    return (\n        <label className={style.name}>\n            Find contacts by name\n            <input className={style.input} type='text' value={filter} onChange={filterInputing} />\n        </label>\n    )\n};\n\nexport default Filter","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"ContactElem_card__NvjGM\",\"title\":\"ContactElem_title__dRhrw\"};","import PropTypes from 'prop-types';\nimport styles from './ContactElem.module.css';\n\nconst ContactElem = ({title, children}) => {\n    return (\n        <>\n            <div className={styles.card}>\n                <h2 className={styles.title}>{title}</h2>\n                {children}\n            </div>\n        </>\n    );\n};\nContactElem.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n};\n\nexport default ContactElem","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {  HelmetProvider } from 'react-helmet-async';\n\nimport { fetchContacts } from '../redux/operations';\nimport { selectIsLoading } from '../redux/selectors';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport Loader from './../components/Loader/Loader';\nimport ContactElem from 'components/ContactElem/ContactElem';\n\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  \n  return (    \n    <>\n      <HelmetProvider>\n        \n        <ContactElem title=\"Phonebook\">\n          <ContactForm />\n        </ContactElem>\n      \n        <ContactElem title=\"Contacts\">      \n          <Filter />  \n          <div>{isLoading && <Loader />}</div>\n          <ContactList />\n        </ContactElem>\n          \n      </HelmetProvider>\n    </>\n  );\n}"],"names":["selectContacts","state","contacts","contactsList","selectIsLoading","isLoading","selectError","error","selectFilter","filter","dispatch","useDispatch","useState","name","number","localState","setLocalState","handleChange","e","target","value","prevState","checkContact","useSelector","some","contact","toLowerCase","className","style","onSubmit","preventDefault","Notiflix","addContact","type","id","pattern","title","onChange","required","height","width","color","ariaLabel","wrapperStyle","display","justifyContent","alignItems","margin","position","top","left","right","bottom","zIndex","wrapperClass","visible","useEffect","fetchContacts","includes","filteringContacts","map","onClick","deleteContact","setFilter","children","styles","Contacts"],"sourceRoot":""}