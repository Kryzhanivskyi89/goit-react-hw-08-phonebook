{"version":3,"file":"static/js/814.a7e27141.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactElem/ContactElem.module.css?4810","components/ContactElem/ContactElem.jsx","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["\r\nexport const selectContacts = state => state.contacts.contactsList;\r\n\r\nexport const selectIsLoading = state => state.contacts.isLoading;\r\n\r\nexport const selectError = state => state.contacts.error;\r\n\r\nexport const selectFilter = state => state.filter;","// extracted by mini-css-extract-plugin\nexport default {\"contact__form\":\"ContactForm_contact__form__OjRMi\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Notiflix from 'notiflix';\r\n\r\nimport { addContact } from '../../redux/contacts/operations';\r\nimport { selectContacts } from '../../redux/contacts/selectors';\r\nimport style from './ContactForm.module.css';\r\n\r\nconst ContactForm = () => {    \r\n  const dispatch = useDispatch();\r\n  const [localState, setLocalState] = useState({ name: '', phone: '' });\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setLocalState(prevState => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  const { name, phone } = localState;\r\n  const contacts = useSelector(selectContacts);\r\n\r\n  const checkContact = contacts.some(contact => {\r\n    return (\r\n      contact.name.toLowerCase() === localState.name.toLowerCase() ||\r\n      contact.phone === localState.phone\r\n    );\r\n  });\r\n\r\n  const handleSubmit = async e => {\r\n  e.preventDefault();\r\n\r\n  if (checkContact) {\r\n    Notiflix.Notify.warning('This contact already exists');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const result = await dispatch(addContact(localState)).unwrap();\r\n    console.log('Contact added successfully:', result);\r\n    setLocalState({ name: '', phone: '' });\r\n  } catch (error) {\r\n    console.error('Failed to add contact:', error);\r\n    Notiflix.Notify.failure('Failed to add contact');\r\n  }\r\n};\r\n   \r\n  return (\r\n    <form className={style.contact__form} onSubmit={handleSubmit}>\r\n      <label className={style.label}> Name\r\n        <input className={style.input}                \r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          id=\"contactName\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label className={style.label}>Number\r\n        <input className={style.input}                \r\n          type=\"tel\"\r\n          id=\"contactNumber\"\r\n          name=\"phone\"\r\n          value={phone}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <button className={style.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import { Dna } from 'react-loader-spinner';\r\n\r\n function Loader () {\r\n    return (\r\n            <Dna\r\n                height=\"80\"\r\n                width=\"80\"\r\n                color=\"#4fa94d\"\r\n                ariaLabel=\"loading\"\r\n                wrapperStyle={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    height: '100vh',\r\n                    margin: '0 auto',\r\n                    position: 'fixed',\r\n                    top: '0',\r\n                    left: '0',\r\n                    right: '0',\r\n                    bottom: '0',\r\n                    zIndex: '9999',\r\n                }}\r\n                wrapperClass=\"\"\r\n                visible={true}\r\n            />\r\n    );\r\n}\r\n\r\nexport default Loader","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"button\":\"ContactList_button__7kL4l\"};","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectContacts, selectError, selectFilter, selectIsLoading } from 'redux/contacts/selectors';\r\n\r\nimport { fetchContacts, deleteContact } from '../../redux/contacts/operations';\r\nimport  Loader  from './../Loader/Loader'\r\nimport style from './ContactList.module.css';\r\n\r\nconst ContactList = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchContacts());\r\n    }, [dispatch]);\r\n\r\n    const isLoading = useSelector(selectIsLoading);\r\n    const error = useSelector(selectError);\r\n    const contacts = useSelector(selectContacts);\r\n    const filter = useSelector(selectFilter);\r\n\r\n    const filteringContacts = contacts => {\r\n        return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\r\n    };\r\n    \r\n    return (\r\n        <ul className={style.list}>\r\n            {isLoading && !error && <Loader />}\r\n            {!isLoading && !error &&\r\n                filteringContacts(contacts).map(({ _id, name, phone }) => (\r\n                    <li className={style.item} key={phone}>\r\n                        <p>\r\n                            {name}: {phone}\r\n                        </p>\r\n                        <button className={style.button} type=\"button\" onClick={() => dispatch(deleteContact(_id))} >Delete contact</button>\r\n                    </li>\r\n                ))\r\n            }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default ContactList","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"Filter_name__ZiNRr\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport style from './Filter.module.css';\r\nimport { setFilter } from '../../redux/contacts/filterSlice';\r\nimport { selectFilter } from '../../redux/contacts/selectors';\r\n\r\nconst Filter = () => {\r\n\r\n    const filter = useSelector(selectFilter);\r\n    const dispatch = useDispatch();\r\n    const filterInputing = e => {\r\n        dispatch(setFilter(e.target.value));\r\n    };\r\n  \r\n    return (\r\n        <label className={style.name}>\r\n            Find contacts by name\r\n            <input className={style.input} type='text' value={filter} onChange={filterInputing} />\r\n        </label>\r\n    )\r\n};\r\n\r\nexport default Filter","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"ContactElem_card__NvjGM\",\"title\":\"ContactElem_title__dRhrw\"};","import PropTypes from 'prop-types';\r\nimport styles from './ContactElem.module.css';\r\n\r\nconst ContactElem = ({title, children}) => {\r\n    return (\r\n        <>\r\n            <section className={styles.card}>\r\n                <h2 className={styles.title}>{title}</h2>\r\n                {children}\r\n            </section>\r\n        </>\r\n    );\r\n};\r\nContactElem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default ContactElem","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Contacts_main__kG0SX\"};","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {  HelmetProvider } from 'react-helmet-async';\r\n\r\nimport { fetchContacts } from '../../redux/contacts/operations';\r\nimport { selectIsLoading } from '../../redux/contacts/selectors';\r\nimport ContactForm from '../../components/ContactForm/ContactForm';\r\nimport ContactList from '../../components/ContactList/ContactList';\r\nimport Filter from '../../components/Filter/Filter';\r\nimport Loader from './../../components/Loader/Loader';\r\nimport ContactElem from 'components/ContactElem/ContactElem';\r\nimport styles from './Contacts.module.css';\r\n\r\n\r\nexport default function Contacts() {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(selectIsLoading);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  \r\n  return (   \r\n      <HelmetProvider>\r\n        <main className={styles.main}>\r\n          <ContactElem title=\"Phonebook\">\r\n            <ContactForm />\r\n          </ContactElem>\r\n        \r\n          <ContactElem title=\"Contacts\">      \r\n            <Filter />  \r\n            <div>{isLoading && <Loader />}</div>\r\n            <ContactList />\r\n          </ContactElem>\r\n        </main>\r\n      </HelmetProvider>\r\n  );\r\n}"],"names":["selectContacts","state","contacts","contactsList","selectIsLoading","isLoading","selectError","error","selectFilter","filter","dispatch","useDispatch","useState","name","phone","localState","setLocalState","handleChange","e","target","value","prevState","checkContact","useSelector","some","contact","toLowerCase","handleSubmit","preventDefault","Notiflix","addContact","unwrap","result","console","log","className","style","onSubmit","type","id","onChange","required","height","width","color","ariaLabel","wrapperStyle","display","justifyContent","alignItems","margin","position","top","left","right","bottom","zIndex","wrapperClass","visible","useEffect","fetchContacts","includes","filteringContacts","map","_id","onClick","deleteContact","setFilter","title","children","styles","Contacts"],"sourceRoot":""}